// –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä–æ–π –∫–æ—Ä–∑–∏–Ω—ã (–µ—Å–ª–∏ –æ–±–Ω–æ–≤–∏–ª—Å—è –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç)
localStorage.removeItem('cart');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Telegram –±–æ—Ç–∞
const BOT_TOKEN = '7439239371:AAG3S-Fszz36bbIp4ucijXyTc2LdTYeO_Dg';
const CHAT_ID = '658759796';

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º +7 –≤ –ø–æ–ª–µ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
document.getElementById('clientPhone').value = '+7';

// –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π –¥–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–æ–≥–æ –ø–æ–ª—è
document.getElementById('clientPhone').addEventListener('input', function(e) {
    let digits = this.value.replace(/\D/g, '');
    if (digits.startsWith('7')) digits = digits.slice(1);
    digits = digits.slice(0, 10);
    this.value = '+7' + digits;
});

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ placeholder –∏ —Ü–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞
function setupField(fieldId, placeholderText) {
    const field = document.getElementById(fieldId);
    field.placeholder = placeholderText;
    field.style.color = '#999';

    field.addEventListener('focus', function() {
        if (this.value === placeholderText) {
            this.value = '';
            this.style.color = '#000';
        }
    });

    field.addEventListener('blur', function() {
        if (this.value === '') {
            this.value = placeholderText;
            this.style.color = '#999';
        }
    });
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–¥—Å–∫–∞–∑–æ–∫
setupField('clientName', '–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á');
setupField('clientAddress', '–ì–æ—Ä–æ–¥, –£–ª–∏—Ü–∞, ‚Ññ –¥–æ–º–∞, –ö–≤–∞—Ä—Ç–∏—Ä–∞');

// –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function checkout() {
    if (cart.length === 0) {
        showNotification('–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞!');
        return;
    }
    document.getElementById('orderModal').style.display = 'flex';
    document.body.style.overflow = 'hidden';
}

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function closeOrderModal() {
    document.getElementById('orderModal').style.display = 'none';
    document.body.style.overflow = 'auto';
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–∫–∞–∑–∞ –≤ Telegram
async function sendOrderToTelegram(orderData) {
    const itemsText = cart.map(item =>
        `‚ñ´ ${item.name} - ${item.quantity || 1} √ó ${item.price} ‚Ç∏`
    ).join('\n');

    const total = cart.reduce((sum, item) => sum + (item.price * (item.quantity || 1)), 0);

    const text = `üì¶ *–ù–æ–≤—ã–π –∑–∞–∫–∞–∑!*

üë§ *–ö–ª–∏–µ–Ω—Ç:* ${orderData.name}
üìû *–¢–µ–ª–µ—Ñ–æ–Ω:* ${orderData.phone}
üè† *–ê–¥—Ä–µ—Å:* ${orderData.address || '–ù–µ —É–∫–∞–∑–∞–Ω'}
üí¨ *–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:* ${orderData.comment || '–ù–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è'}

üõí *–°–æ—Å—Ç–∞–≤ –∑–∞–∫–∞–∑–∞:*
${itemsText}

üí∞ *–ò—Ç–æ–≥–æ:* ${total} ‚Ç∏`;

    const url = `https://api.telegram.org/bot${BOT_TOKEN}/sendMessage?chat_id=${CHAT_ID}&text=${encodeURIComponent(text)}&parse_mode=Markdown`;

    try {
        await fetch(url);
        showNotification('–ó–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω! –ú—ã —Å –≤–∞–º–∏ —Å–≤—è–∂–µ–º—Å—è.');
        cart = [];
        saveCart();
        updateCartUI();
        closeOrderModal();
        closeCart();
    } catch (error) {
        showNotification('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–∫–∞–∑–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
        console.error('–û—à–∏–±–∫–∞:', error);
    }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ä–º—ã –∑–∞–∫–∞–∑–∞ —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π
document.getElementById('orderForm').addEventListener('submit', function(e) {
    e.preventDefault();

    const nameField = document.getElementById('clientName');
    const phoneField = document.getElementById('clientPhone');
    const addressField = document.getElementById('clientAddress');
    const comment = document.getElementById('clientComment').value.trim();

    const name = nameField.value.trim();
    const phone = phoneField.value.trim();
    const address = addressField.value.trim();

    // –§—É–Ω–∫—Ü–∏—è —Å–±—Ä–æ—Å–∞ —Å—Ç–∏–ª–µ–π
    [nameField, phoneField, addressField].forEach(f => f.style.border = '');

    if (name === '' || phone === '') {
        showNotification('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∏–º—è –∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞!');
        if (name === '') {
            nameField.style.border = '2px solid red';
            nameField.focus();
        } else {
            phoneField.style.border = '2px solid red';
            phoneField.focus();
        }
        return;
    }

    if (name.length < 3) {
        showNotification('–í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–Ω–æ–µ –∏–º—è ');
        nameField.style.border = '2px solid red';
        nameField.focus();
        return;
    }

    if (address.length > 0 && address.length < 5) {
        showNotification('–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∞–¥—Ä–µ—Å ');
        addressField.style.border = '2px solid red';
        addressField.focus();
        return;
    }

    const phonePattern = /^\+7\d{10}$/;
    if (!phonePattern.test(phone)) {
        showNotification('–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ +7XXXXXXXXXX');
        phoneField.style.border = '2px solid red';
        phoneField.focus();
        return;
    }

    const orderData = {
        name,
        phone,
        address,
        comment
    };

    sendOrderToTelegram(orderData);
});

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –æ–±–ª–∞—Å—Ç–∏
document.getElementById('orderModal').addEventListener('click', function(e) {
    if (e.target === this) {
        closeOrderModal();
    }
});

// –ü–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
function showNotification(message) {
    const notif = document.createElement('div');
    notif.textContent = message;
    notif.style.position = 'fixed';
    notif.style.bottom = '20px';
    notif.style.left = '50%';
    notif.style.transform = 'translateX(-50%)';
    notif.style.backgroundColor = '#2a7f62';
    notif.style.color = 'white';
    notif.style.padding = '12px 20px';
    notif.style.borderRadius = '10px';
    notif.style.boxShadow = '0 4px 12px rgba(0,0,0,0.15)';
    notif.style.zIndex = 9999;
    notif.style.fontSize = '15px';
    document.body.appendChild(notif);

    setTimeout(() => {
        notif.remove();
    }, 3000);
}